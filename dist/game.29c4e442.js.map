{"version":3,"sources":["game.js"],"names":["canvas","document","getElementById","ctx","getContext","penColor","lineWidth","genitalX","genitalY","objectX","objectY","circleSize","circleX","width","circleY","height","circleSpeedX","circleSpeedY","drawGenitals","clearRect","strokeStyle","beginPath","arc","Math","PI","stroke","moveTo","quadraticCurveTo","drawCircle","fillStyle","fill","resizeCanvas","canvasWidth","window","innerWidth","canvasHeight","innerHeight","updateOval","event","deltaY","updateObject","keyCode","updateCircle","addEventListener","setInterval","addAutoplay","setTimeout","querySelector","play"],"mappings":";AACA,IAAMA,EAASC,SAASC,eAAe,cACjCC,EAAMH,EAAOI,WAAW,MAGxBC,EAAW,WACXC,EAAY,EACdC,EAAW,IACXC,EAAW,EACXC,EAAU,EACVC,EAAU,EAGRC,EAAa,GACfC,EAAUZ,EAAOa,MAAQ,EAAIF,EAAa,EAC1CG,EAAUd,EAAOe,OAAS,EAAIJ,EAAa,EAC3CK,EAAe,EACfC,EAAe,EAGnB,SAASC,IAEPf,EAAIgB,UAAU,EAAG,EAAGnB,EAAOa,MAAOb,EAAOe,QAGzCZ,EAAIiB,YAAcf,EAClBF,EAAIG,UAAYA,EAGhBH,EAAIkB,YACJlB,EAAImB,IAAI,GAAKb,EAAS,GAAKC,EAAS,GAAI,EAAa,EAAVa,KAAKC,IAChDrB,EAAIsB,SAGJtB,EAAIkB,YACJlB,EAAImB,IAAI,GAAKb,EAAS,GAAKC,EAAS,GAAI,EAAa,EAAVa,KAAKC,IAChDrB,EAAIsB,SAGJtB,EAAIkB,YACJlB,EAAIuB,OAAO,GAAKjB,EAAS,GAAKC,GAC9BP,EAAIwB,iBACF,GAAKlB,EAAUF,EACf,GAAKG,EAAUF,EACf,GAAKC,EACL,GAAKC,GAEPP,EAAIsB,SAIN,SAASG,IAEPzB,EAAI0B,UAAY,WAGhB1B,EAAIkB,YACJlB,EAAImB,IAAIV,EAASE,EAASH,EAAa,EAAG,EAAa,EAAVY,KAAKC,IAClDrB,EAAI2B,OAIN,SAASC,IACP,IAEMC,EAA6B,EAFfC,OAAOC,WAEa,EAClCC,EAA+B,EAFhBF,OAAOG,YAEc,EAC1CpC,EAAOa,MAAQmB,EACfhC,EAAOe,OAASoB,EAChBzB,EAAUyB,EAAe,IACzBjB,IAUF,SAASmB,EAAWC,GAEdA,EAAMC,OAAS,EACjB/B,GAFW,EAIXA,GAJW,EAMbU,IAOF,SAASsB,EAAaF,GAEpB,OAAQA,EAAMG,SACZ,KAAK,GACHhC,GAHS,EAIT,MACF,KAAK,GACHC,GANS,EAOT,MACF,KAAK,GACHD,GATS,EAUT,MACF,KAAK,GACHC,GAZS,EAebQ,IAOF,SAASwB,IAGP5B,GAAWG,IADXL,GAAWI,GAIGL,EAAa,EAAIX,EAAOa,OAASD,EAAUD,EAAa,EAAI,KACxEK,GAAgBA,IAGhBF,EAAUH,EAAa,EAAIX,EAAOe,QAClCD,EAAUH,EAAa,EAAI,KAE3BM,GAAgBA,GAKhBL,EAAUD,EAAa,GAAK,GAAKF,GACjCG,EAAUD,EAAa,GAAK,GAAKF,EAAU,IAC3CK,EAAUH,EAAa,GAAK,GAAKD,GACjCI,EAAUH,EAAa,GAAK,GAAKD,IAC/BO,EAAe,GAAKH,EAAUH,EAAa,GAAK,GAAKD,GACpDO,EAAe,GAAKH,EAAUH,EAAa,GAAK,GAAKD,KAGpDO,EAAe,GAEjBA,GAAgBA,EAChBH,EAAU,GAAKJ,EAAUC,EAAa,IAGtCM,GAAgBA,EAChBH,EAAU,GAAKJ,EAAUC,EAAa,IAK1CR,EAAIgB,UAAU,EAAG,EAAGnB,EAAOa,MAAOb,EAAOe,QAGzCG,IACAU,IArFFG,IAGAE,OAAOU,iBAAiB,SAAUZ,GAclC/B,EAAO2C,iBAAiB,QAASN,GAuBjCpC,SAAS0C,iBAAiB,UAAWH,GAiDrCI,YAAYF,EAAc,IAE1B,IAAMG,EAAc,WAElB5C,SAAS0C,iBAAiB,mBAAoB,WAC5CG,WAAW,WAEW7C,SAAS8C,cAAc,mBAC/BC,QACX,QAIPH","file":"game.29c4e442.js","sourceRoot":"..\\src","sourcesContent":["// Récupérer le canvas et son contexte\r\nconst canvas = document.getElementById(\"gameCanvas\");\r\nconst ctx = canvas.getContext(\"2d\");\r\n\r\n// Définir les propriétés du dessin\r\nconst penColor = \"deeppink\";\r\nconst lineWidth = 3;\r\nlet genitalX = 160; // Position initiale en X des parties génitales\r\nlet genitalY = 0; // Position initiale en Y des parties génitales\r\nlet objectX = 0; // Position initiale en X de l'objet\r\nlet objectY = 0; // Position initiale en Y de l'objet\r\n\r\n// Propriétés du cercle mobile\r\nconst circleSize = 80; // Taille du cercle\r\nlet circleX = canvas.width / 2 - circleSize / 2; // Position initiale en X du cercle\r\nlet circleY = canvas.height / 2 - circleSize / 2; // Position initiale en Y du cercle\r\nlet circleSpeedX = 2; // Vitesse initiale en X du cercle\r\nlet circleSpeedY = 2; // Vitesse initiale en Y du cercle\r\n\r\n// Fonction pour dessiner les parties génitales\r\nfunction drawGenitals() {\r\n  // Effacer le canvas\r\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n\r\n  // Créer un stylo rose\r\n  ctx.strokeStyle = penColor;\r\n  ctx.lineWidth = lineWidth;\r\n\r\n  // Dessiner le premier cercle (partie supérieure)\r\n  ctx.beginPath();\r\n  ctx.arc(50 + objectX, 50 + objectY, 20, 0, Math.PI * 2); // Dessiner le cercle supérieur\r\n  ctx.stroke();\r\n\r\n  // Dessiner le deuxième cercle (partie inférieure)\r\n  ctx.beginPath();\r\n  ctx.arc(50 + objectX, 90 + objectY, 20, 0, Math.PI * 2); // Dessiner le cercle inférieur\r\n  ctx.stroke();\r\n\r\n  // Dessiner l'ovale (partie entre les deux cercles)\r\n  ctx.beginPath();\r\n  ctx.moveTo(70 + objectX, 50 + objectY); // Déplacer le stylo vers le début de l'ovale\r\n  ctx.quadraticCurveTo(\r\n    80 + objectX + genitalX,\r\n    60 + objectY + genitalY,\r\n    70 + objectX,\r\n    90 + objectY\r\n  ); // Dessiner l'ovale\r\n  ctx.stroke();\r\n}\r\n\r\n// Fonction pour dessiner le cercle mobile\r\nfunction drawCircle() {\r\n  // Créer un stylo bleu\r\n  ctx.fillStyle = \"deeppink\";\r\n\r\n  // Dessiner le cercle\r\n  ctx.beginPath();\r\n  ctx.arc(circleX, circleY, circleSize / 2, 0, Math.PI * 2);\r\n  ctx.fill();\r\n}\r\n\r\n// Fonction pour mettre à jour la taille du canvas pour qu'il occupe les 3/4 de l'écran\r\nfunction resizeCanvas() {\r\n  const screenWidth = window.innerWidth;\r\n  const screenHeight = window.innerHeight;\r\n  const canvasWidth = (screenWidth * 3) / 4;\r\n  const canvasHeight = (screenHeight * 3) / 4;\r\n  canvas.width = canvasWidth;\r\n  canvas.height = canvasHeight;\r\n  objectY = canvasHeight - 140; // Positionnement initial de l'objet en bas du canvas\r\n  drawGenitals(); // Redessiner les parties génitales avec la nouvelle taille du canvas\r\n}\r\n\r\n// Appeler la fonction pour redimensionner le canvas lors du chargement de la page\r\nresizeCanvas();\r\n\r\n// Ajouter un gestionnaire d'événements pour redimensionner le canvas lorsque la fenêtre est redimensionnée\r\nwindow.addEventListener(\"resize\", resizeCanvas);\r\n\r\n// Fonction pour mettre à jour les coordonnées des parties génitales avec la roulette de la souris\r\nfunction updateOval(event) {\r\n  const step = 5; // Nombre de pixels de déplacement à chaque rotation de la roulette\r\n  if (event.deltaY > 0) {\r\n    genitalY += step; // Courber l'ovale vers le haut avec la roulette vers le bas\r\n  } else {\r\n    genitalY -= step; // Courber l'ovale vers le bas avec la roulette vers le haut\r\n  }\r\n  drawGenitals(); // Redessiner les parties génitales avec les nouvelles coordonnées\r\n}\r\n\r\n// Ajouter un gestionnaire d'événements pour détecter les mouvements de la roulette de la souris\r\ncanvas.addEventListener(\"wheel\", updateOval);\r\n\r\n// Fonction pour mettre à jour les coordonnées de l'objet avec les touches du clavier\r\nfunction updateObject(event) {\r\n  const step = 5; // Nombre de pixels de déplacement à chaque touche pressée\r\n  switch (event.keyCode) {\r\n    case 37: // Flèche gauche\r\n      objectX -= step;\r\n      break;\r\n    case 38: // Flèche haut\r\n      objectY -= step;\r\n      break;\r\n    case 39: // Flèche droite\r\n      objectX += step;\r\n      break;\r\n    case 40: // Flèche bas\r\n      objectY += step;\r\n      break;\r\n  }\r\n  drawGenitals(); // Redessiner les parties génitales avec les nouvelles coordonnées\r\n}\r\n\r\n// Ajouter un gestionnaire d'événements pour détecter les touches du clavier\r\ndocument.addEventListener(\"keydown\", updateObject);\r\n\r\n// Fonction pour mettre à jour la position du cercle mobile\r\nfunction updateCircle() {\r\n  // Mise à jour de la position du cercle en fonction de sa vitesse\r\n  circleX += circleSpeedX;\r\n  circleY += circleSpeedY;\r\n\r\n  // Vérifier les collisions avec les bords du canvas\r\n  if (circleX + circleSize / 2 > canvas.width || circleX - circleSize / 2 < 0) {\r\n    circleSpeedX = -circleSpeedX; // Inverser la direction horizontale en cas de collision avec les bords gauche ou droit\r\n  }\r\n  if (\r\n    circleY + circleSize / 2 > canvas.height ||\r\n    circleY - circleSize / 2 < 0\r\n  ) {\r\n    circleSpeedY = -circleSpeedY; // Inverser la direction verticale en cas de collision avec les bords supérieur ou inférieur\r\n  }\r\n\r\n  // Vérifier la collision avec l'objet\r\n  if (\r\n    circleX + circleSize / 2 >= 50 + objectX && // Côté droit du cercle est à droite de la bordure gauche de l'objet\r\n    circleX - circleSize / 2 <= 50 + objectX + 40 && // Côté gauche du cercle est à gauche de la bordure droite de l'objet\r\n    circleY + circleSize / 2 >= 50 + objectY && // Bas du cercle est en dessous de la bordure supérieure de l'objet\r\n    circleY - circleSize / 2 <= 90 + objectY && // Haut du cercle est au-dessus de la bordure inférieure de l'objet\r\n    ((circleSpeedY > 0 && circleY - circleSize / 2 <= 90 + objectY) || // Le cercle va vers le bas et est au-dessus de l'objet\r\n      (circleSpeedY < 0 && circleY + circleSize / 2 >= 50 + objectY)) // Le cercle va vers le haut et est en dessous de l'objet\r\n  ) {\r\n    // Gérer la collision avec l'objet en inversant la direction du cercle\r\n    if (circleSpeedY > 0) {\r\n      // Si le cercle descend, il rebondit vers le haut\r\n      circleSpeedY = -circleSpeedY;\r\n      circleY = 50 + objectY - circleSize / 2; // Empêcher le cercle de passer à travers l'objet\r\n    } else {\r\n      // Si le cercle monte, il rebondit vers le bas\r\n      circleSpeedY = -circleSpeedY;\r\n      circleY = 90 + objectY + circleSize / 2; // Empêcher le cercle de passer à travers l'objet\r\n    }\r\n  }\r\n\r\n  // Effacer le canvas avant de redessiner le cercle\r\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n\r\n  // Dessiner les parties génitales et le cercle\r\n  drawGenitals();\r\n  drawCircle();\r\n}\r\n\r\n// Appeler la fonction pour mettre à jour la position du cercle toutes les 16 millisecondes (environ 60 fois par seconde)\r\nsetInterval(updateCircle, 16);\r\n\r\nconst addAutoplay = () => {\r\n  // Attendez que le document soit entièrement chargé\r\n  document.addEventListener(\"DOMContentLoaded\", function () {\r\n    setTimeout(() => {\r\n      // Récupérer l'élément audio avec controls\r\n      const audioPlayer = document.querySelector(\"audio[controls]\");\r\n      audioPlayer.play();\r\n    }, 1000);\r\n  });\r\n};\r\n\r\naddAutoplay();\r\n"]}